#!/usr/bin/env node

/**
 * Extract SST resource environment variables and convert them to VITE_ format
 * This script runs inside `sst shell` context where SST_RESOURCE_* vars are available
 */
import { writeFileSync } from "fs";
import { dirname, join } from "path";
import { fileURLToPath } from "url";

const __dirname = dirname(fileURLToPath(import.meta.url));
const rootDir = join(__dirname, "..");
const desktopDir = join(rootDir, "packages", "desktop");

try {
  console.log("🔄 Extracting SST resources from environment...");

  // Parse SST resources from environment variables
  const apiResource = JSON.parse(process.env.SST_RESOURCE_Api || "{}");
  const authResource = JSON.parse(process.env.SST_RESOURCE_Auth || "{}");
  const realtimeResource = JSON.parse(
    process.env.SST_RESOURCE_Realtime || "{}",
  );
  const appResource = JSON.parse(process.env.SST_RESOURCE_App || "{}");

  // Create environment variables from SST resources
  const envVars = [
    `VITE_API_URL=${apiResource.url || "http://localhost:3001/api"}`,
    `VITE_AUTH_URL=${authResource.url || "http://localhost:3001/auth"}`,
    `VITE_STAGE=${appResource.stage || "dev"}`,
    `VITE_REALTIME_ENDPOINT=${realtimeResource.endpoint || "localhost"}`,
    `VITE_AUTHORIZER=${realtimeResource.authorizer || "dev-authorizer"}`,
    `VITE_APP_URL=http://localhost:3000`,
    `VITE_PUBLIC_APP_URL=http://localhost:3001`,
  ];

  const envContent = [
    "# Auto-generated environment variables from SST resources",
    "# Generated by extract-sst-env.mjs inside sst shell context",
    "",
    ...envVars,
    "",
  ].join("\n");

  // Write .env file to desktop package
  const envPath = join(desktopDir, ".env");
  writeFileSync(envPath, envContent);

  console.log("✅ Extracted SST resources to environment variables:");
  console.log(`   📁 ${envPath}`);
  envVars.forEach((line) => console.log(`   🔧 ${line}`));
} catch (error) {
  console.error("❌ Failed to extract SST resources:");
  console.error(error.message);
  process.exit(1);
}
