#!/usr/bin/env node

/**
 * Generate environment variables for the desktop app from SST outputs
 * This script runs `sst outputs` and creates a .env file for the desktop app
 */
import { execSync } from "child_process";
import { writeFileSync } from "fs";
import { dirname, join } from "path";
import { fileURLToPath } from "url";

const __dirname = dirname(fileURLToPath(import.meta.url));
const rootDir = join(__dirname, "..");
const desktopDir = join(rootDir, "packages", "desktop");

try {
  console.log("🔄 Fetching SST outputs...");

  let outputs = {};
  let usingFallback = false;

  try {
    // Try to get SST outputs as JSON using local installation
    const outputsJson = execSync("bunx sst outputs --format json", {
      cwd: rootDir,
      encoding: "utf8",
    });
    outputs = JSON.parse(outputsJson);
  } catch (sstError) {
    console.log("⚠️  SST not running, using development fallback values");
    usingFallback = true;

    // Fallback values for development when SST is not running
    outputs = {
      DesktopApiUrl: "http://localhost:3001/api",
      DesktopAuthUrl: "http://localhost:3001/auth",
      DesktopStage: "dev",
      DesktopRealtimeEndpoint: "localhost",
      DesktopAuthorizer: "dev-authorizer",
    };
  }

  // Create environment variables from outputs
  const envVars = [
    `VITE_API_URL=${outputs.DesktopApiUrl || "http://localhost:3001/api"}`,
    `VITE_AUTH_URL=${outputs.DesktopAuthUrl || "http://localhost:3001/auth"}`,
    `VITE_STAGE=${outputs.DesktopStage || "dev"}`,
    `VITE_REALTIME_ENDPOINT=${outputs.DesktopRealtimeEndpoint || "localhost"}`,
    `VITE_AUTHORIZER=${outputs.DesktopAuthorizer || "dev-authorizer"}`,
    `VITE_APP_URL=http://localhost:3000`,
    `VITE_PUBLIC_APP_URL=http://localhost:3001`,
  ];

  const envContent = [
    "# Auto-generated environment variables from SST outputs",
    usingFallback
      ? "# Using fallback values - start SST with 'bun run dev' for real endpoints"
      : "# Do not edit this file manually - run `bun run desktop:env` instead",
    "",
    ...envVars,
    "",
  ].join("\n");

  // Write .env file to desktop package
  const envPath = join(desktopDir, ".env");
  writeFileSync(envPath, envContent);

  console.log("✅ Generated desktop environment variables:");
  console.log(`   📁 ${envPath}`);
  if (usingFallback) {
    console.log("   ⚠️  Using fallback values - start SST for real endpoints");
  }
  envVars.forEach((line) => console.log(`   🔧 ${line}`));
} catch (error) {
  console.error("❌ Failed to generate desktop environment variables:");
  console.error(error.message);
  process.exit(1);
}
